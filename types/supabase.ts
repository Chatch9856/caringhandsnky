// This file should be generated by Supabase CLI using:
// supabase gen types typescript --project-id YOUR_PROJECT_ID --schema public > types/supabase.ts
// 
// This is a manually constructed version based on the provided SQL schema.
// Ensure it's accurate or regenerate with Supabase CLI for production.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      patients: { 
        Row: {
          id: string 
          created_at: string 
          full_name: string 
          email: string 
          phone: string 
          // New fields for Patient Dashboard profile editing
          address: string | null
          emergency_contact_name: string | null
          emergency_contact_phone: string | null
        }
        Insert: {
          id?: string 
          created_at?: string 
          full_name: string
          email: string
          phone: string
          address?: string | null
          emergency_contact_name?: string | null
          emergency_contact_phone?: string | null
        }
        Update: {
          id?: string
          created_at?: string
          full_name?: string
          email?: string
          phone?: string
          address?: string | null
          emergency_contact_name?: string | null
          emergency_contact_phone?: string | null
        }
        Relationships: []
      }
      patient_subscriptions: { // New table from Patient Dashboard step
        Row: {
          id: string
          patient_id: string
          plan_name: string
          price: number
          duration: string
          features: Json | null
          start_date: string
          end_date: string | null
          status: string 
          created_at: string
        }
        Insert: {
          id?: string
          patient_id: string
          plan_name: string
          price: number
          duration: string
          features?: Json | null
          start_date: string
          end_date?: string | null
          status: string 
          created_at?: string
        }
        Update: {
          id?: string
          patient_id?: string
          plan_name?: string
          price?: number
          duration?: string
          features?: Json | null
          start_date?: string
          end_date?: string | null
          status?: string 
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "patient_subscriptions_patient_id_fkey"
            columns: ["patient_id"]
            referencedRelation: "patients"
            referencedColumns: ["id"]
          }
        ]
      }
      services: { 
        Row: {
          id: string 
          created_at?: string 
          name: string 
          description?: string | null 
          category?: string | null 
          price_per_hour?: number | null 
          is_active?: boolean 
        }
        Insert: {
          id?: string 
          created_at?: string
          name: string
          description?: string | null
          category?: string | null
          price_per_hour?: number | null
          is_active?: boolean
        }
        Update: {
          id?: string
          created_at?: string
          name?: string
          description?: string | null
          category?: string | null
          price_per_hour?: number | null
          is_active?: boolean
        }
        Relationships: []
      }
      caregivers: { 
        Row: {
          id: string
          created_at: string 
          full_name: string 
          email: string | null 
          phone: string | null 
          profile_image_url: string | null 
          skills: Json | null 
          certifications: Json | null 
          notes: string | null 
          tags: Json | null 
          status: string 
        }
        Insert: {
          id?: string
          created_at?: string
          full_name: string
          email?: string | null
          phone?: string | null
          profile_image_url?: string | null
          skills?: Json | null
          certifications?: Json | null
          notes?: string | null
          tags?: Json | null
          status?: string
        }
        Update: {
          id?: string
          created_at?: string
          full_name?: string
          email?: string | null
          phone?: string | null
          profile_image_url?: string | null
          skills?: Json | null
          certifications?: Json | null
          notes?: string | null
          tags?: Json | null
          status?: string
        }
        Relationships: []
      }
      caregiver_shifts: { 
        Row: {
          id: string
          caregiver_id: string | null 
          patient_id: string | null 
          shift_date: string | null 
          start_time: string | null 
          end_time: string | null 
          location: string | null 
          notes: string | null 
          status: string 
          created_at: string 
        }
        Insert: {
          id?: string
          caregiver_id?: string | null
          patient_id?: string | null
          shift_date?: string | null
          start_time?: string | null
          end_time?: string | null
          location?: string | null
          notes?: string | null
          status?: string
          created_at?: string
        }
        Update: {
          id?: string
          caregiver_id?: string | null
          patient_id?: string | null
          shift_date?: string | null
          start_time?: string | null
          end_time?: string | null
          location?: string | null
          notes?: string | null
          status?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "caregiver_shifts_caregiver_id_fkey"
            columns: ["caregiver_id"]
            referencedRelation: "caregivers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "caregiver_shifts_patient_id_fkey"
            columns: ["patient_id"]
            referencedRelation: "patients"
            referencedColumns: ["id"]
          }
        ]
      }
      caregiver_documents: { 
        Row: {
          id: string
          caregiver_id: string | null 
          doc_url: string | null 
          doc_type: string | null 
          expires_on: string | null 
          uploaded_at: string 
        }
        Insert: {
          id?: string
          caregiver_id?: string | null
          doc_url?: string | null
          doc_type?: string | null
          expires_on?: string | null
          uploaded_at?: string
        }
        Update: {
          id?: string
          caregiver_id?: string | null
          doc_url?: string | null
          doc_type?: string | null
          expires_on?: string | null
          uploaded_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "caregiver_documents_caregiver_id_fkey"
            columns: ["caregiver_id"]
            referencedRelation: "caregivers"
            referencedColumns: ["id"]
          }
        ]
      }
      caregiver_incidents: { 
        Row: {
          id: string
          caregiver_id: string | null 
          type: string | null 
          description: string | null 
          added_by: string | null 
          created_at: string 
          attachment_url: string | null // Added attachment_url
        }
        Insert: {
          id?: string
          caregiver_id?: string | null
          type?: string | null
          description?: string | null
          added_by?: string | null
          created_at?: string
          attachment_url?: string | null
        }
        Update: {
          id?: string
          caregiver_id?: string | null
          type?: string | null
          description?: string | null
          added_by?: string | null
          created_at?: string
          attachment_url?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "caregiver_incidents_caregiver_id_fkey"
            columns: ["caregiver_id"]
            referencedRelation: "caregivers"
            referencedColumns: ["id"]
          }
        ]
      }
      caregiver_notifications: { 
        Row: {
          id: string
          caregiver_id: string | null 
          type: string | null 
          message: string | null 
          method: string | null 
          status: string 
          created_at: string 
          priority: string | null // Added from app type
        }
        Insert: {
          id?: string
          caregiver_id?: string | null
          type?: string | null
          message?: string | null
          method?: string | null
          status?: string
          created_at?: string
          priority?: string | null
        }
        Update: {
          id?: string
          caregiver_id?: string | null
          type?: string | null
          message?: string | null
          method?: string | null
          status?: string
          created_at?: string
          priority?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "caregiver_notifications_caregiver_id_fkey"
            columns: ["caregiver_id"]
            referencedRelation: "caregivers"
            referencedColumns: ["id"]
          }
        ]
      }
      bookings: { 
        Row: {
          id: string
          patient_id: string | null 
          caregiver_id: string | null 
          service: string | null 
          location: string | null 
          booking_date: string | null 
          start_time: string | null 
          end_time: string | null 
          notes: string | null 
          status: string 
          created_at: string 
        }
        Insert: {
          id?: string
          patient_id?: string | null
          caregiver_id?: string | null
          service?: string | null
          location?: string | null
          booking_date?: string | null
          start_time?: string | null
          end_time?: string | null
          notes?: string | null
          status?: string
          created_at?: string
        }
        Update: {
          id?: string
          patient_id?: string | null
          caregiver_id?: string | null
          service?: string | null
          location?: string | null
          booking_date?: string | null
          start_time?: string | null
          end_time?: string | null
          notes?: string | null
          status?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "bookings_caregiver_id_fkey"
            columns: ["caregiver_id"]
            referencedRelation: "caregivers"
            referencedColumns: ["id"]
          },
          { 
            foreignKeyName: "bookings_patient_id_fkey"
            columns: ["patient_id"]
            referencedRelation: "patients" 
            referencedColumns: ["id"]
          }
        ]
      }
      booking_logs: { 
        Row: {
          id: string
          booking_id: string | null 
          action: string | null 
          admin_user: string | null 
          notes: string | null 
          timestamp: string 
        }
        Insert: {
          id?: string
          booking_id?: string | null
          action?: string | null
          admin_user?: string | null
          notes?: string | null
          timestamp?: string
        }
        Update: {
          id?: string
          booking_id?: string | null
          action?: string | null
          admin_user?: string | null
          notes?: string | null
          timestamp?: string
        }
        Relationships: [
          {
            foreignKeyName: "booking_logs_booking_id_fkey"
            columns: ["booking_id"]
            referencedRelation: "bookings"
            referencedColumns: ["id"]
          }
        ]
      }
      payment_gateways: { 
        Row: {
          id: string 
          type: string | null 
          handle: string | null 
          instructions: string | null 
          qr_url: string | null 
          is_active: boolean 
          created_at: string 
        }
        Insert: {
          id?: string
          type: string 
          handle?: string | null
          instructions?: string | null
          qr_url?: string | null
          is_active?: boolean
          created_at?: string
        }
        Update: {
          id?: string
          type?: string 
          handle?: string | null
          instructions?: string | null
          qr_url?: string | null
          is_active?: boolean
          created_at?: string
        }
        Relationships: []
      }
      service_pricing: { 
        Row: {
          id: string 
          service_name: string | null 
          description: string | null 
          price: number | null 
          taxable: boolean 
          created_at: string 
        }
        Insert: {
          id?: string
          service_name: string 
          description?: string | null
          price: number 
          taxable?: boolean
          created_at?: string
        }
        Update: {
          id?: string
          service_name?: string
          description?: string | null
          price?: number
          taxable?: boolean
          created_at?: string
        }
        Relationships: []
      }
      payments: { 
        Row: {
          id: string 
          patient_id: string | null 
          description: string | null 
          amount: number | null 
          method: string | null 
          status: string 
          created_at: string 
        }
        Insert: {
          id?: string
          patient_id?: string | null
          description: string 
          amount: number 
          method?: string | null
          status?: string
          created_at?: string
        }
        Update: {
          id?: string
          patient_id?: string | null
          description?: string
          amount?: number
          method?: string | null
          status?: string
          created_at?: string
        }
        Relationships: [
           {
            foreignKeyName: "payments_patient_id_fkey"
            columns: ["patient_id"]
            referencedRelation: "patients"
            referencedColumns: ["id"]
          }
        ]
      }
      subscriptions: { 
        Row: {
          id: string 
          patient_id: string | null 
          plan_name: string | null 
          price: number | null 
          duration: string | null 
          start_date: string | null 
          end_date: string | null 
          status: string 
          created_at: string 
        }
        Insert: {
          id?: string
          patient_id?: string | null
          plan_name: string 
          price: number 
          duration: string 
          start_date?: string | null
          end_date?: string | null
          status?: string
          created_at?: string
        }
        Update: {
          id?: string
          patient_id?: string | null
          plan_name?: string
          price?: number
          duration?: string
          start_date?: string | null
          end_date?: string | null
          status?: string
          created_at?: string
        }
        Relationships: [
           {
            foreignKeyName: "subscriptions_patient_id_fkey"
            columns: ["patient_id"]
            referencedRelation: "patients"
            referencedColumns: ["id"]
          }
        ]
      }
      refunds: { 
        Row: {
          id: string 
          payment_id: string | null 
          reason: string | null 
          proof_url: string | null 
          refunded_on: string 
          amount: number | null 
          status: string | null 
        }
        Insert: {
          id?: string
          payment_id: string 
          reason: string 
          proof_url?: string | null
          refunded_on?: string
          amount: number 
          status: string 
        }
        Update: {
          id?: string
          payment_id?: string
          reason?: string
          proof_url?: string | null
          refunded_on?: string
          amount?: number
          status?: string
        }
        Relationships: [
          {
            foreignKeyName: "refunds_payment_id_fkey"
            columns: ["payment_id"]
            referencedRelation: "payments"
            referencedColumns: ["id"]
          }
        ]
      }
      audit_log: { 
        Row: {
          id: string 
          module: string | null 
          action: string | null 
          user_info: string | null // Renamed from user to avoid keyword, and to store more info
          target_id: string | null 
          target_type: string | null // Added target_type
          notes: string | null 
          timestamp: string 
        }
        Insert: {
          id?: string
          module: string 
          action: string 
          user_info?: string | null
          target_id?: string | null
          target_type?: string | null
          notes?: string | null
          timestamp?: string
        }
        Update: {
          id?: string
          module?: string
          action?: string
          user_info?: string | null
          target_id?: string | null
          target_type?: string | null
          notes?: string | null
          timestamp?: string
        }
        Relationships: []
      }
      inventory_items: { // New table for Inventory
        Row: {
          id: string;
          name: string;
          category: string | null;
          quantity: number;
          reorder_level: number | null;
          unit: string | null; // e.g., 'pcs', 'box', 'ml'
          notes: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          name: string;
          category?: string | null;
          quantity: number;
          reorder_level?: number | null;
          unit?: string | null;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          name?: string;
          category?: string | null;
          quantity?: number;
          reorder_level?: number | null;
          unit?: string | null;
          notes?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Relationships: [];
      }
      inventory_logs: { // New table for Inventory Logs
        Row: {
          id: string;
          item_id: string;
          action_type: string; // e.g., 'STOCK_IN', 'STOCK_OUT', 'ADJUSTMENT'
          quantity_changed: number;
          user_info: string | null; // Who performed action
          notes: string | null;
          created_at: string;
        };
        Insert: {
          id?: string;
          item_id: string;
          action_type: string;
          quantity_changed: number;
          user_info?: string | null;
          notes?: string | null;
          created_at?: string;
        };
        Update: {
          id?: string;
          item_id?: string;
          action_type?: string;
          quantity_changed?: number;
          user_info?: string | null;
          notes?: string | null;
          created_at?: string;
        };
        Relationships: [
          {
            foreignKeyName: "inventory_logs_item_id_fkey";
            columns: ["item_id"];
            referencedRelation: "inventory_items";
            referencedColumns: ["id"];
          }
        ];
      }
      // --- TABLES FOR NOTIFICATIONS (from previous step) ---
      notification_logs: {
        Row: {
          id: string 
          user_id: string | null 
          recipient_contact: string 
          notification_type: string 
          medium: string 
          status: string 
          subject: string | null 
          body: string | null 
          error_message: string | null 
          reference_id: string | null 
          created_at: string 
        }
        Insert: {
          id?: string 
          user_id?: string | null
          recipient_contact: string
          notification_type: string
          medium: string
          status: string
          subject?: string | null
          body?: string | null
          error_message?: string | null
          reference_id?: string | null
          created_at?: string 
        }
        Update: { 
          id?: string
          user_id?: string | null
          recipient_contact?: string
          notification_type?: string
          medium?: string
          status?: string
          subject?: string | null
          body?: string | null
          error_message?: string | null
          reference_id?: string | null
          created_at?: string
        }
        Relationships: []
      }
      notification_event_settings: {
        Row: {
          id: string 
          event_type: string 
          email_enabled: boolean 
          sms_enabled: boolean 
          description: string | null 
          updated_at: string 
        }
        Insert: {
          id?: string 
          event_type: string
          email_enabled?: boolean
          sms_enabled?: boolean
          description?: string | null
          updated_at?: string 
        }
        Update: {
          id?: string
          event_type?: string
          email_enabled?: boolean
          sms_enabled?: boolean
          description?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      // --- NEW TABLES FOR MESSAGING & CASE MANAGEMENT ---
      messages: {
        Row: {
          id: string // uuid, pk
          sender_id: string // uuid, identifies sender (patient, caregiver, or admin)
          recipient_id: string // uuid, identifies recipient
          sender_type: string // 'patient', 'caregiver', 'admin'
          recipient_type: string // 'patient', 'caregiver', 'admin'
          content: string // text, not null
          created_at: string // timestamptz, default now()
          read_at: string | null // timestamptz, nullable
        }
        Insert: {
          id?: string
          sender_id: string
          recipient_id: string
          sender_type: string
          recipient_type: string
          content: string
          created_at?: string
          read_at?: string | null
        }
        Update: { // Typically only read_at would be updated
          id?: string
          sender_id?: string
          recipient_id?: string
          sender_type?: string
          recipient_type?: string
          content?: string
          created_at?: string
          read_at?: string | null
        }
        Relationships: [] // FKs to patients/caregivers could be added if IDs are always from there
      }
      cases: {
        Row: {
          id: string // uuid, pk
          patient_id: string // uuid, fk to patients.id, not null
          assigned_staff_id: string | null // uuid, nullable, fk to caregivers.id (or future staff table)
          title: string // text, not null
          description: string // text, not null
          tags: Json | null // jsonb, e.g., ["Urgent", "Follow-Up"]
          status: string // text, not null, e.g., 'Open', 'Active', 'Resolved', 'Closed'
          created_by_id: string | null // uuid, admin/staff who created
          created_by_type: string | null // 'admin', 'staff'
          created_at: string // timestamptz, default now()
          updated_at: string // timestamptz, default now()
          resolved_at: string | null // timestamptz, nullable
        }
        Insert: {
          id?: string
          patient_id: string
          assigned_staff_id?: string | null
          title: string
          description: string
          tags?: Json | null
          status: string
          created_by_id?: string | null
          created_by_type?: string | null
          created_at?: string
          updated_at?: string
          resolved_at?: string | null
        }
        Update: {
          id?: string
          patient_id?: string
          assigned_staff_id?: string | null
          title?: string
          description?: string
          tags?: Json | null
          status?: string
          created_by_id?: string | null
          created_by_type?: string | null
          created_at?: string
          updated_at?: string
          resolved_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "cases_patient_id_fkey"
            columns: ["patient_id"]
            referencedRelation: "patients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "cases_assigned_staff_id_fkey"
            columns: ["assigned_staff_id"]
            referencedRelation: "caregivers" // Assuming staff are caregivers for now
            referencedColumns: ["id"]
          }
          // Add FK for created_by_id if there's a unified users/staff table
        ]
      }
      case_notes: {
        Row: {
          id: string // uuid, pk
          case_id: string // uuid, fk to cases.id, not null
          author_id: string | null // uuid, who wrote the note
          author_type: string | null // 'admin', 'patient', 'caregiver'
          author_name: string | null // Store name for easy display
          note: string // text, not null
          created_at: string // timestamptz, default now()
          visible_to_patient: boolean // boolean, default false
        }
        Insert: {
          id?: string
          case_id: string
          author_id?: string | null
          author_type?: string | null
          author_name?: string | null
          note: string
          created_at?: string
          visible_to_patient?: boolean
        }
        Update: { // Notes are typically immutable, but visibility might change
          id?: string
          case_id?: string
          author_id?: string | null
          author_type?: string | null
          author_name?: string | null
          note?: string
          created_at?: string
          visible_to_patient?: boolean
        }
        Relationships: [
          {
            foreignKeyName: "case_notes_case_id_fkey"
            columns: ["case_id"]
            referencedRelation: "cases"
            referencedColumns: ["id"]
          }
        ]
      }
      case_files: {
        Row: {
          id: string // uuid, pk
          case_id: string // uuid, fk to cases.id, not null
          uploader_id: string | null // uuid
          uploader_type: string | null // 'admin', 'patient', 'caregiver'
          uploader_name: string | null // Store name for easy display
          file_name: string // text, not null
          file_path: string // text, not null, path in Supabase Storage
          file_type: string | null // text, MIME type
          file_size: number | null // bigint
          created_at: string // timestamptz, default now()
          visible_to_patient: boolean // boolean, default false
        }
        Insert: {
          id?: string
          case_id: string
          uploader_id?: string | null
          uploader_type?: string | null
          uploader_name?: string | null
          file_name: string
          file_path: string
          file_type?: string | null
          file_size?: number | null
          created_at?: string
          visible_to_patient?: boolean
        }
        Update: { // Files are typically immutable once uploaded, but visibility might change
          id?: string
          case_id?: string
          uploader_id?: string | null
          uploader_type?: string | null
          uploader_name?: string | null
          file_name?: string
          file_path?: string
          file_type?: string | null
          file_size?: number | null
          created_at?: string
          visible_to_patient?: boolean
        }
        Relationships: [
          {
            foreignKeyName: "case_files_case_id_fkey"
            columns: ["case_id"]
            referencedRelation: "cases"
            referencedColumns: ["id"]
          }
        ]
      }
    } // end Tables
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      // Assuming enums are handled at app level or as text constraints in DB
    }
    CompositeTypes: {
      [_ in never]: never
    }
  } // end public
} // end Database
 